#*****************************************************************************************
# Vivado (TM) v2021.2 (64-bit)
#
# cm3_bd_vivado2021.2.tcl: Tcl script for re-creating project 'cortex-m3-bd-ver2021'
#
# Generated by Vivado on Mon Dec 20 12:23:39 +0800 2021
# IP Build 3369179 on Thu Oct 21 08:25:16 MDT 2021
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (cm3_bd_vivado2021.2.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "F:/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.srcs/sources_1/new/swdio_tri_buf.v"
#    "F:/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.srcs/sources_1/new/fpga_state_led.v"
#    "F:/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.srcs/constrs_1/new/cortexm3-gpio-swd-uart.xdc"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.srcs/sources_1/new/swdio_tri_buf.v"]"\
 "[file normalize "$origin_dir/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.srcs/sources_1/new/fpga_state_led.v"]"\
 "[file normalize "$origin_dir/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.srcs/constrs_1/new/cortexm3-gpio-swd-uart.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set paths [list \
   d:/XlinxVitis/OpenSourceIP/AT426-BU-98000-r0p1-00rel0 \
   D:/XlinxVitis/OpenSourceIP/AT472-BU-98000-r0p1-00rel0 \
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "cortex-m3-bd-ver2021"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "cm3_bd_vivado2021.2.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xc7k325tffg676-2

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "ip_output_repo" -value "$proj_dir/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xc7k325tffg676-2" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "2" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "1" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "2" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "2" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "2" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "2" -objects $obj
set_property -name "webtalk.xcelium_export_sim" -value "1" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "2" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "d:/XlinxVitis/OpenSourceIP/AT426-BU-98000-r0p1-00rel0 D:/XlinxVitis/OpenSourceIP/AT472-BU-98000-r0p1-00rel0" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 [file normalize "${origin_dir}/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.srcs/sources_1/new/swdio_tri_buf.v" ]\
 [file normalize "${origin_dir}/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.srcs/sources_1/new/fpga_state_led.v" ]\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "design_main_wrapper" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.srcs/constrs_1/new/cortexm3-gpio-swd-uart.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "new/cortexm3-gpio-swd-uart.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[get_files *new/cortexm3-gpio-swd-uart.xdc]" -objects $obj
set_property -name "target_part" -value "xc7k325tffg676-2" -objects $obj
set_property -name "target_ucf" -value "[get_files *new/cortexm3-gpio-swd-uart.xdc]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "design_main_wrapper" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files swdio_tri_buf.v] == "" } {
  import_files -quiet -fileset sources_1 F:/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.srcs/sources_1/new/swdio_tri_buf.v
}


# Proc to create BD design_main
proc cr_bd_design_main { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# swdio_tri_buf



  # CHANGE DESIGN NAME HERE
  set design_name design_main

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  Arm.com:CortexM:CORTEXM3_AXI:1.1\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:axi_uartlite:2.0\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:proc_sys_reset:5.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  swdio_tri_buf\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: sys_reset
proc create_hier_cell_sys_reset { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_sys_reset() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir O -from 0 -to 0 Res
  create_bd_pin -dir I dcm_locked
  create_bd_pin -dir O -from 0 -to 0 -type rst interconnect_aresetn
  create_bd_pin -dir I -type rst mb_debug_sys_rst
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn
  create_bd_pin -dir I -type rst reset_in
  create_bd_pin -dir I -type clk slowest_sync_clk

  # Create instance: core_rst_inv, and set properties
  set core_rst_inv [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 core_rst_inv ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $core_rst_inv

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create port connections
  connect_bd_net -net CORTEXM3_AXI_0_SYSRESETREQ [get_bd_pins mb_debug_sys_rst] [get_bd_pins proc_sys_reset_0/mb_debug_sys_rst]
  connect_bd_net -net proc_sys_reset_0_interconnect_aresetn [get_bd_pins interconnect_aresetn] [get_bd_pins proc_sys_reset_0/interconnect_aresetn]
  connect_bd_net -net proc_sys_reset_0_mb_reset [get_bd_pins core_rst_inv/Op1] [get_bd_pins proc_sys_reset_0/mb_reset]
  connect_bd_net -net reset_in_1 [get_bd_pins reset_in] [get_bd_pins proc_sys_reset_0/ext_reset_in]
  connect_bd_net -net sys_mmcm_locked [get_bd_pins dcm_locked] [get_bd_pins proc_sys_reset_0/dcm_locked]
  connect_bd_net -net sys_mmcm_sys_clk [get_bd_pins slowest_sync_clk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk]
  connect_bd_net -net sys_reset_peripheral_aresetn [get_bd_pins peripheral_aresetn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins Res] [get_bd_pins core_rst_inv/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set GPIO_OUT_A [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 GPIO_OUT_A ]


  # Create ports
  set ext_clk_50m [ create_bd_port -dir I -type clk -freq_hz 50000000 ext_clk_50m ]
  set reset_in [ create_bd_port -dir I -type rst reset_in ]
  set_property -dict [ list \
   CONFIG.POLARITY {ACTIVE_LOW} \
 ] $reset_in
  set rx_0 [ create_bd_port -dir I rx_0 ]
  set swclk [ create_bd_port -dir I -type clk swclk ]
  set swd_io [ create_bd_port -dir IO swd_io ]
  set tx_0 [ create_bd_port -dir O tx_0 ]

  # Create instance: CORTEXM3_AXI_0, and set properties
  set CORTEXM3_AXI_0 [ create_bd_cell -type ip -vlnv Arm.com:CortexM:CORTEXM3_AXI:1.1 CORTEXM3_AXI_0 ]
  set_property -dict [ list \
   CONFIG.DTCM_SIZE {"0111"} \
   CONFIG.ITCM_INIT_RAM {false} \
   CONFIG.ITCM_SIZE {"0111"} \
   CONFIG.JTAG_PRESENT {false} \
   CONFIG.LVL_WIDTH {3} \
   CONFIG.TRACE_LVL {1} \
   CONFIG.WIC_PRESENT {false} \
 ] $CORTEXM3_AXI_0

  # Create instance: IRQ_concat, and set properties
  set IRQ_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 IRQ_concat ]
  set_property -dict [ list \
   CONFIG.IN1_WIDTH {15} \
   CONFIG.NUM_PORTS {2} \
 ] $IRQ_concat

  # Create instance: NMI_const, and set properties
  set NMI_const [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 NMI_const ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $NMI_const

  # Create instance: axi_gpio_A, and set properties
  set axi_gpio_A [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_A ]
  set_property -dict [ list \
   CONFIG.C_ALL_OUTPUTS {1} \
   CONFIG.C_GPIO_WIDTH {8} \
 ] $axi_gpio_A

  # Create instance: axi_interconnect, and set properties
  set axi_interconnect [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect ]
  set_property -dict [ list \
   CONFIG.NUM_MI {3} \
   CONFIG.NUM_SI {2} \
 ] $axi_interconnect

  # Create instance: axi_uartlite_0, and set properties
  set axi_uartlite_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_uartlite:2.0 axi_uartlite_0 ]
  set_property -dict [ list \
   CONFIG.C_S_AXI_ACLK_FREQ_HZ {50000000} \
 ] $axi_uartlite_0

  # Create instance: cfg_itcm_const, and set properties
  set cfg_itcm_const [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 cfg_itcm_const ]
  set_property -dict [ list \
   CONFIG.CONST_WIDTH {2} \
 ] $cfg_itcm_const

  # Create instance: disIRQ_const, and set properties
  set disIRQ_const [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 disIRQ_const ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {15} \
 ] $disIRQ_const

  # Create instance: swdio_tri_buf_0, and set properties
  set block_name swdio_tri_buf
  set block_cell_name swdio_tri_buf_0
  if { [catch {set swdio_tri_buf_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $swdio_tri_buf_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: sys_mmcm, and set properties
  set sys_mmcm [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 sys_mmcm ]
  set_property -dict [ list \
   CONFIG.CLKIN1_JITTER_PS {200.0} \
   CONFIG.CLKOUT1_JITTER {192.113} \
   CONFIG.CLKOUT1_PHASE_ERROR {164.985} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {50} \
   CONFIG.CLK_OUT1_PORT {sys_clk} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {20.000} \
   CONFIG.MMCM_CLKIN1_PERIOD {20.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {20.000} \
   CONFIG.PRIM_IN_FREQ {50} \
   CONFIG.PRIM_SOURCE {Single_ended_clock_capable_pin} \
   CONFIG.RESET_PORT {resetn} \
   CONFIG.RESET_TYPE {ACTIVE_LOW} \
 ] $sys_mmcm

  # Create instance: sys_reset
  create_hier_cell_sys_reset [current_bd_instance .] sys_reset

  # Create interface connections
  connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_pins CORTEXM3_AXI_0/CM3_SYS_AXI3] [get_bd_intf_pins axi_interconnect/S00_AXI]
  connect_bd_intf_net -intf_net axi_gpio_A_GPIO [get_bd_intf_ports GPIO_OUT_A] [get_bd_intf_pins axi_gpio_A/GPIO]
  connect_bd_intf_net -intf_net axi_interconnect_M00_AXI [get_bd_intf_pins axi_gpio_A/S_AXI] [get_bd_intf_pins axi_interconnect/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_M01_AXI [get_bd_intf_pins axi_interconnect/M01_AXI] [get_bd_intf_pins axi_uartlite_0/S_AXI]

  # Create port connections
  connect_bd_net -net CORTEXM3_AXI_0_SWDO [get_bd_pins CORTEXM3_AXI_0/SWDO] [get_bd_pins swdio_tri_buf_0/swd_o]
  connect_bd_net -net CORTEXM3_AXI_0_SWDOEN [get_bd_pins CORTEXM3_AXI_0/SWDOEN] [get_bd_pins swdio_tri_buf_0/swd_oe]
  connect_bd_net -net CORTEXM3_AXI_0_SYSRESETREQ [get_bd_pins CORTEXM3_AXI_0/SYSRESETREQ] [get_bd_pins sys_reset/mb_debug_sys_rst]
  connect_bd_net -net Net [get_bd_ports swd_io] [get_bd_pins swdio_tri_buf_0/swd_io]
  connect_bd_net -net SWCLKTCK_0_1 [get_bd_ports swclk] [get_bd_pins CORTEXM3_AXI_0/SWCLKTCK]
  connect_bd_net -net axi_uartlite_0_interrupt [get_bd_pins IRQ_concat/In0] [get_bd_pins axi_uartlite_0/interrupt]
  connect_bd_net -net axi_uartlite_0_tx [get_bd_ports tx_0] [get_bd_pins axi_uartlite_0/tx]
  connect_bd_net -net ext_clk_50m_1 [get_bd_ports ext_clk_50m] [get_bd_pins sys_mmcm/clk_in1]
  connect_bd_net -net proc_sys_reset_0_interconnect_aresetn [get_bd_pins axi_interconnect/ARESETN] [get_bd_pins sys_reset/interconnect_aresetn]
  connect_bd_net -net reset_in_1 [get_bd_ports reset_in] [get_bd_pins sys_mmcm/resetn] [get_bd_pins sys_reset/reset_in]
  connect_bd_net -net rx_0_1 [get_bd_ports rx_0] [get_bd_pins axi_uartlite_0/rx]
  connect_bd_net -net swdio_tri_buf_0_swd_i [get_bd_pins CORTEXM3_AXI_0/SWDITMS] [get_bd_pins swdio_tri_buf_0/swd_i]
  connect_bd_net -net sys_mmcm_locked [get_bd_pins sys_mmcm/locked] [get_bd_pins sys_reset/dcm_locked]
  connect_bd_net -net sys_mmcm_sys_clk [get_bd_pins CORTEXM3_AXI_0/HCLK] [get_bd_pins axi_gpio_A/s_axi_aclk] [get_bd_pins axi_interconnect/ACLK] [get_bd_pins axi_interconnect/M00_ACLK] [get_bd_pins axi_interconnect/M01_ACLK] [get_bd_pins axi_interconnect/M02_ACLK] [get_bd_pins axi_interconnect/S00_ACLK] [get_bd_pins axi_interconnect/S01_ACLK] [get_bd_pins axi_uartlite_0/s_axi_aclk] [get_bd_pins sys_mmcm/sys_clk] [get_bd_pins sys_reset/slowest_sync_clk]
  connect_bd_net -net sys_reset_peripheral_aresetn [get_bd_pins axi_gpio_A/s_axi_aresetn] [get_bd_pins axi_interconnect/M00_ARESETN] [get_bd_pins axi_interconnect/M01_ARESETN] [get_bd_pins axi_interconnect/M02_ARESETN] [get_bd_pins axi_interconnect/S00_ARESETN] [get_bd_pins axi_interconnect/S01_ARESETN] [get_bd_pins axi_uartlite_0/s_axi_aresetn] [get_bd_pins sys_reset/peripheral_aresetn]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins CORTEXM3_AXI_0/DBGRESETn] [get_bd_pins CORTEXM3_AXI_0/SYSRESETn] [get_bd_pins sys_reset/Res]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins CORTEXM3_AXI_0/IRQ] [get_bd_pins IRQ_concat/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins CORTEXM3_AXI_0/CFGITCMEN] [get_bd_pins cfg_itcm_const/dout]
  connect_bd_net -net xlconstant_0_dout1 [get_bd_pins CORTEXM3_AXI_0/NMI] [get_bd_pins NMI_const/dout]
  connect_bd_net -net xlconstant_0_dout2 [get_bd_pins IRQ_concat/In1] [get_bd_pins disIRQ_const/dout]

  # Create address segments
  assign_bd_address -offset 0x40000000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CORTEXM3_AXI_0/CM3_SYS_AXI3] [get_bd_addr_segs axi_gpio_A/S_AXI/Reg] -force
  assign_bd_address -offset 0x40600000 -range 0x00010000 -target_address_space [get_bd_addr_spaces CORTEXM3_AXI_0/CM3_SYS_AXI3] [get_bd_addr_segs axi_uartlite_0/S_AXI/Reg] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_Layers":"/sys_reset_interconnect_aresetn:true|/SWCLKTCK_0_1:true|/axi_uartlite_0_interrupt:true|/sys_mmcm_sys_clk:true|/sys_reset_mb_reset:true|/reset_0_1:true|/sys_reset_peripheral_aresetn:true|",
   "Default View_ScaleFactor":"0.651134",
   "Default View_TopLeft":"134,-209",
   "Display-PortTypeClock":"true",
   "Display-PortTypeInterrupt":"true",
   "Display-PortTypeOthers":"true",
   "Display-PortTypeReset":"true",
   "ExpandedHierarchyInLayout":"",
   "Interfaces View_Layers":"/sys_reset_interconnect_aresetn:false|/SWCLKTCK_0_1:false|/axi_uartlite_0_interrupt:false|/sys_mmcm_sys_clk:false|/sys_reset_mb_reset:false|/reset_0_1:false|/sys_reset_peripheral_aresetn:false|/util_ds_buf_0_IBUF_OUT:false|/util_ds_buf_1_BUFG_O:false|/reset_system/sys_reset_mb_reset:false|/reset_system/sys_reset_peripheral_aresetn:false|/reset_system/sys_reset_interconnect_aresetn:false|",
   "Interfaces View_ScaleFactor":"1.09692",
   "Interfaces View_TopLeft":"-128,-194",
   "Reduced Jogs_ExpandedHierarchyInLayout":"",
   "Reduced Jogs_Layers":"/util_ds_buf_0_IBUF_OUT:true|/util_ds_buf_1_BUFG_O:true|/reset_system/sys_reset_mb_reset:true|/reset_0_1:true|/reset_system/sys_reset_peripheral_aresetn:true|/axi_uartlite_0_interrupt:true|/sys_mmcm_sys_clk:true|/reset_system/sys_reset_interconnect_aresetn:true|/SWCLKTCK_0_1:true|",
   "Reduced Jogs_Layout":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port GPIO_OUT_A -pg 1 -lvl 8 -x 3720 -y 240 -defaultsOSRD
preplace port port-id_reset_in -pg 1 -lvl 0 -x -540 -y 130 -defaultsOSRD
preplace port port-id_swclk -pg 1 -lvl 0 -x -540 -y 650 -defaultsOSRD
preplace port port-id_swd_io -pg 1 -lvl 8 -x 3720 -y 570 -defaultsOSRD
preplace port port-id_rx_0 -pg 1 -lvl 0 -x -540 -y 690 -defaultsOSRD
preplace port port-id_tx_0 -pg 1 -lvl 8 -x 3720 -y 550 -defaultsOSRD
preplace port port-id_ext_clk_50m -pg 1 -lvl 0 -x -540 -y 110 -defaultsOSRD
preplace inst CORTEXM3_AXI_0 -pg 1 -lvl 3 -x 1000 -y 20 -swap {34 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 0 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 77 78 73 74 75 76 80 89 79 81 84 88 83 82 85 86 87} -defaultsOSRD -pinY CM3_SYS_AXI3 180R -pinY CM3_CODE_AXI3 0R -pinY SYSRESETREQ 200R -pinY DBGRESTARTED 220R -pinY LOCKUP 240R -pinY HALTED 260R -pinY JTAGNSW 280R -pinY SWDO 380R -pinY SWDOEN 400R -pinY TRCENA 300R -pinY TRACECLK 320R -pinBusY TRACEDATA 340R -pinY SWV 360R -pinY HCLK 20L -pinY SYSRESETn 400L -pinBusY IRQ 0L -pinY NMI 80L -pinBusY CFGITCMEN 220L -pinY DBGRESETn 380L -pinY DBGRESTART 200L -pinY EDBGRQ 180L -pinY STCLK 240L -pinY SWCLKTCK 260L -pinY SWDITMS 280L
preplace inst swdio_tri_buf_0 -pg 1 -lvl 3 -x 1000 -y 590 -defaultsOSRD -orient R180 -pinY swd_o 60R -pinY swd_oe 40R -pinY swd_i 60L -pinY swd_io 40L
preplace inst cfg_itcm_const -pg 1 -lvl 2 -x 620 -y 290 -defaultsOSRD -pinBusY dout 0R
preplace inst NMI_const -pg 1 -lvl 2 -x 620 -y 190 -defaultsOSRD -pinBusY dout 0R
preplace inst IRQ_concat -pg 1 -lvl 7 -x 3590 -y 630 -defaultsOSRD -pinBusY In0 0L -pinBusY In1 140L -pinBusY dout 0R
preplace inst disIRQ_const -pg 1 -lvl 6 -x 3316 -y 590 -defaultsOSRD -pinBusY dout 0R
preplace inst sys_reset -pg 1 -lvl 4 -x 1600 -y -30 -swap {0 1 3 2 5 4 6} -defaultsOSRD -pinY slowest_sync_clk 10L -pinY reset_in 30L -pinY mb_debug_sys_rst 190L -pinY dcm_locked 50L -pinBusY interconnect_aresetn 170R -pinBusY peripheral_aresetn 70R -pinBusY Res 190R
preplace inst axi_gpio_A -pg 1 -lvl 6 -x 3316 -y 60 -defaultsOSRD -pinY S_AXI 0L -pinY GPIO 0R -pinY s_axi_aclk 20L -pinY s_axi_aresetn 40L
preplace inst axi_interconnect -pg 1 -lvl 5 -x 2956 -y 110 -swap {} -defaultsOSRD -pinY S00_AXI 20L -pinY S01_AXI 0L -pinY M00_AXI 0R -pinY M01_AXI 130R -pinY M02_AXI 270R -pinY ACLK 160L -pinY ARESETN 260L -pinY S00_ACLK 140L -pinY S00_ARESETN 40L -pinY S01_ACLK 200L -pinY S01_ARESETN 60L -pinY M00_ACLK 180L -pinY M00_ARESETN 80L -pinY M01_ACLK 240L -pinY M01_ARESETN 100L -pinY M02_ACLK 220L -pinY M02_ARESETN 120L
preplace inst axi_uartlite_0 -pg 1 -lvl 6 -x 3316 -y 200 -defaultsOSRD -pinY S_AXI 0L -pinY UART 130R -pinY UART.rx 150R -pinY UART.tx 170R -pinY s_axi_aclk 20L -pinY s_axi_aresetn 40L -pinY interrupt 250R
preplace inst sys_mmcm -pg 1 -lvl 1 -x 390 -y 110 -swap {1 0 2 3} -defaultsOSRD -pinY resetn 20L -pinY clk_in1 0L -pinY sys_clk 0R -pinY locked 20R
preplace netloc CORTEXM3_AXI_0_SWDO 1 3 1 1220 400n
preplace netloc CORTEXM3_AXI_0_SWDOEN 1 3 1 1200 420n
preplace netloc CORTEXM3_AXI_0_SYSRESETREQ 1 3 1 1300 160n
preplace netloc Net 1 2 6 780 520 1240J 714 1850 680 3170J 530 3430J 570 N
preplace netloc SWCLKTCK_0_1 1 0 3 -520J 610 500J 650 720J
preplace netloc axi_uartlite_0_interrupt 1 6 1 3450 450n
preplace netloc axi_uartlite_0_tx 1 6 2 3470 550 NJ
preplace netloc ext_clk_50m_1 1 0 1 N 110
preplace netloc proc_sys_reset_0_interconnect_aresetn 1 4 1 1790 140n
preplace netloc reset_in_1 1 0 4 -520J -20 NJ -20 700J -100 1340
preplace netloc rx_0_1 1 0 7 -500J 650 480J 690 740J 500 1260J 694 1790 660 3130J 510 3430
preplace netloc swdio_tri_buf_0_swd_i 1 2 1 760 300n
preplace netloc sys_mmcm_locked 1 1 3 500 20 760J -60 1300J
preplace netloc sys_mmcm_sys_clk 1 1 5 NJ 110 720 -120 1320 230 1830 10 3130
preplace netloc sys_reset_peripheral_aresetn 1 4 2 1850 30 3190
preplace netloc util_vector_logic_0_Res 1 2 3 780 480 NJ 480 1770
preplace netloc xlconcat_0_dout 1 2 6 780 -80 1280J 500 1870 50 3150J -6 3470J 50 3690
preplace netloc xlconstant_0_dout 1 2 1 700 240n
preplace netloc xlconstant_0_dout1 1 2 1 780 100n
preplace netloc xlconstant_0_dout2 1 6 1 3430 590n
preplace netloc S00_AXI_1 1 3 2 1200J 250 1810
preplace netloc axi_gpio_A_GPIO 1 6 2 3430J 240 N
preplace netloc axi_interconnect_M00_AXI 1 5 1 3170 60n
preplace netloc axi_interconnect_M01_AXI 1 5 1 3110 200n
levelinfo -pg 1 -540 390 620 1000 1600 2956 3316 3590 3720
pagesize -pg 1 -db -bbox -sgen -670 -260 3860 1030
",
   "Reduced Jogs_ScaleFactor":"0.339456",
   "Reduced Jogs_TopLeft":"-683,-698",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port clk_in_125m -pg 1 -lvl 0 -x -300 -y -80 -defaultsOSRD
preplace port GPIO_OUT_A -pg 1 -lvl 8 -x 2300 -y 130 -defaultsOSRD
preplace port port-id_reset_in -pg 1 -lvl 0 -x -300 -y -60 -defaultsOSRD
preplace port port-id_swclk -pg 1 -lvl 0 -x -300 -y 230 -defaultsOSRD
preplace port port-id_swd_io -pg 1 -lvl 8 -x 2300 -y 400 -defaultsOSRD
preplace port port-id_rx_0 -pg 1 -lvl 0 -x -300 -y 280 -defaultsOSRD
preplace port port-id_tx_0 -pg 1 -lvl 8 -x 2300 -y 300 -defaultsOSRD
preplace inst CORTEXM3_AXI_0 -pg 1 -lvl 3 -x 870 -y 40 -defaultsOSRD
preplace inst sys_mmcm -pg 1 -lvl 1 -x 150 -y -70 -defaultsOSRD
preplace inst sys_reset -pg 1 -lvl 1 -x 150 -y 130 -defaultsOSRD -resize 285 142
preplace inst core_rst_inv -pg 1 -lvl 2 -x 480 -y 110 -defaultsOSRD -resize 219 88
preplace inst swdio_tri_buf_0 -pg 1 -lvl 3 -x 870 -y 330 -defaultsOSRD -orient R180
preplace inst itcm -pg 1 -lvl 4 -x 1270 -y 40 -defaultsOSRD
preplace inst axi_interconnect -pg 1 -lvl 6 -x 1850 -y 0 -defaultsOSRD
preplace inst dtcm -pg 1 -lvl 7 -x 2160 -y 0 -defaultsOSRD
preplace inst axi_gpio_A -pg 1 -lvl 7 -x 2160 -y 130 -defaultsOSRD
preplace inst axi_uartlite_0 -pg 1 -lvl 7 -x 2160 -y 290 -defaultsOSRD
preplace inst cfg_itcm_const -pg 1 -lvl 2 -x 480 -y -20 -defaultsOSRD
preplace inst NMI_const -pg 1 -lvl 2 -x 480 -y -120 -defaultsOSRD
preplace inst xlconcat_0 -pg 1 -lvl 5 -x 1480 -y 480 -defaultsOSRD -orient R180
preplace inst xlconstant_0 -pg 1 -lvl 6 -x 1850 -y 470 -defaultsOSRD -orient R180
preplace netloc sys_reset_mb_reset 1 1 1 320 98n
preplace netloc util_vector_logic_0_Res 1 2 1 610 -40n
preplace netloc sys_mmcm_sys_clk 1 0 7 -260 0 330J -180 650 -140 1110 -90 N -90 1600 -170 2030
preplace netloc CORTEXM3_AXI_0_SYSRESETREQ 1 0 4 -260 240 NJ 240 NJ 240 1080
preplace netloc sys_mmcm_locked 1 0 2 -270 -140 320
preplace netloc reset_0_1 1 0 1 -280 -60n
preplace netloc SWCLKTCK_0_1 1 0 3 NJ 230 NJ 230 610J
preplace netloc CORTEXM3_AXI_0_SWDOEN 1 3 1 1070 80n
preplace netloc CORTEXM3_AXI_0_SWDO 1 3 1 1090 60n
preplace netloc swdio_tri_buf_0_swd_i 1 2 1 640 140n
preplace netloc Net 1 2 6 650 260 NJ 260 N 260 1590 400 N 400 N
preplace netloc sys_reset_interconnect_aresetn 1 1 5 330J 180 630J 220 1100 -60 N -60 N
preplace netloc sys_reset_peripheral_aresetn 1 1 6 320J 190 620J 230 1110J 120 N 120 1580 -160 2010
preplace netloc rx_0_1 1 0 8 NJ 280 NJ 280 620J 250 NJ 250 NJ 250 1600 380 NJ 380 2280
preplace netloc axi_uartlite_0_tx 1 7 1 N 300
preplace netloc xlconstant_0_dout 1 2 1 620 -20n
preplace netloc xlconstant_0_dout1 1 2 1 640 -120n
preplace netloc axi_uartlite_0_interrupt 1 5 3 1590 410 NJ 410 2270
preplace netloc xlconstant_0_dout2 1 5 1 N 470
preplace netloc CLK_IN1_D_0_1 1 0 1 N -80
preplace netloc CORTEXM3_AXI_0_CM3_CODE_AXI3 1 3 1 1070 -60n
preplace netloc S00_AXI_1 1 3 3 N -80 N -80 1590
preplace netloc axi_interconnect_M00_AXI 1 6 1 N -20
preplace netloc axi_interconnect_M01_AXI 1 6 1 2020 0n
preplace netloc axi_gpio_A_GPIO 1 7 1 N 130
preplace netloc axi_interconnect_M02_AXI 1 6 1 2000 20n
levelinfo -pg 1 -300 150 480 870 1270 1480 1850 2160 2300
pagesize -pg 1 -db -bbox -sgen -430 -340 2440 1150
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_main()
cr_bd_design_main ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_main.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_main.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse design_main.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/MINE/m3_block_ds/cortex-m3-bd-ver2021-singleclk/cortex-m3-bd-ver2021.gen/sources_1/bd/design_main/hdl/design_main_wrapper.v" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse design_main.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xc7k325tffg676-2 -flow {Vivado Synthesis 2021} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2021" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7k325tffg676-2" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "F:/MINE/m3_block_ds/cortex-m3-bd-ver2021/cortex-m3-bd-ver2021.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xc7k325tffg676-2 -flow {Vivado Implementation 2021} -strategy "Vivado Implementation Defaults" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Vivado Implementation Defaults" [get_runs impl_1]
  set_property flow "Vivado Implementation 2021" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xc7k325tffg676-2" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "F:/MINE/m3_block_ds/cortex-m3-bd-ver2021/cortex-m3-bd-ver2021.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Vivado Implementation Defaults" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_drc_0" -objects $obj

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_methodology_0" -objects $obj

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_power_0" -objects $obj

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]
set_property -name "reports" -value "impl_1#impl_1_route_report_timing_summary_0" -objects $obj

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]
set_property -name "reports" -value "impl_1#impl_1_place_report_utilization_0" -objects $obj

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
